View(E)
View(E)
for (i in 1:nrow(data)){
j=which(allnames==data[i,2])
k=which(allnames==data[i,3])
E[j,k]=E[j,k]+1
}
data=read.csv(file="/Volumes/Jane/Research Seminar II/4/heroesData.csv", header=TRUE, sep =",")
allnames=unique(c(as.matrix(data[,2]),as.matrix(data[,3])))
E=matrix(0,nrow=length(allnames),ncol=length(allnames))
for (i in 1:nrow(data)){
j=which(allnames==data[i,2])
k=which(allnames==data[i,3])
E[j,k]=E[j,k]+1
}
max(E)
max(E,1)
max(E,2)
?max
E=E/max(E)
View(E)
?diag
diag(E)=1
View(E)
View(E)
frequency(c(as.matrix(data[,2]),as.matrix(data[,3])))
?frequency
table(c(as.matrix(data[,2]),as.matrix(data[,3])))
C=table(c(as.matrix(data[,2]),as.matrix(data[,3])))
table(c(as.matrix(data[,2]),as.matrix(data[,3])))
class(C)
C=as.matrix(C)
View(C)
C[1]
sum(C)
sum(C)/2
rownames(C)
data=read.csv(file="/Volumes/Jane/Research Seminar II/4/heroesData.csv", header=TRUE, sep =",")
C=table(c(as.matrix(data[,2]),as.matrix(data[,3])))
C=as.matrix(C)
allnames=rownames(C)
E=matrix(0,nrow=length(allnames),ncol=length(allnames))
for (i in 1:nrow(data)){
j=which(allnames==data[i,2])
k=which(allnames==data[i,3])
E[j,k]=E[j,k]+1
}
E=E/max(E)
diag(E)=1
View(E)
View(C)
min(E)
S=t(C)%*%E%*%C
library(igraph)
NetRisk=function(Ri, X){
S=sqrt(t(Ri) %*% X %*% Ri)
RiskIncr=0.5*(X %*% Ri + t(X) %*% Ri)/S[1,1]
RiskDecomp=RiskIncr*Ri
result=list(S,RiskIncr,RiskDecomp)
}
na = length(diag(E))
Y=E
diag(Y)=0
g=graph.adjacency(Y)
plot.igraph(g, layout=layout.fruchterman.reingold,
edge.arrow.size=0.5, vertex.size=18,
vertex.label=seq(1,na))
plot.igraph(g, layout=layout.fruchterman.reingold,
edge.arrow.size=0.5, vertex.size=15,
vertex.label=seq(1,na))
View(Y)
Ri = C
plot.igraph(g, layout=layout.fruchterman.reingold,
edge.arrow.size=0.5, vertex.size=15,
vertex.label=allnames)
plot.igraph(g, layout=layout.fruchterman.reingold,
edge.arrow.size=0.5, vertex.size=40,
vertex.label=allnames)
plot.igraph(g, layout=layout.fruchterman.reingold,
edge.arrow.size=0.5, vertex.size=15,
vertex.label=seq(1,na))
na = length(diag(E))
Y=E
diag(Y)=0
g=graph.adjacency(Y)
plot.igraph(g, layout=layout.fruchterman.reingold,
edge.arrow.size=0.5, vertex.size=15,
vertex.label=seq(1,na))
S=sqrt(t(C)%*%E%*%C)
res = NetRisk(Ri, E)
S = res[[1]]
print(c("Risk_Score",S))
RiskIncr=res[[2]]
deg = rowSums(E)-1
frag = mean(deg^2)/mean(deg)
print(c("Fragility_Score = "),frag)
print(c("Fragility_Score = ",frag)
print(c("Fragility_Score = ",frag))
print(c("Fragility_Score = ",frag))
cent = evcent(g)$vector
print("Normalized Centrality Scores")
print(cent)
sorted_cent=sort(cent, decreasing=TRUE, index.return=TRUE)
Scent=sorted_cent$x
idxScent=sorted_cent$ix
barplot(t(Scent),col="dark red",xlab="Node Number",names.arg=idxScent, cex.names=0.75)
print(cent)
allnames[6]
allnames[14]
print (diameter(g))
data=read.csv(file="/Volumes/Jane/Research Seminar II/4/heroesData.csv", header=TRUE, sep =",")
# create compromise vector
Ri=table(c(as.matrix(data[,2]),as.matrix(data[,3])))
Ri=as.matrix(Ri)
allnames=rownames(Ri)
X=matrix(0,nrow=length(allnames),ncol=length(allnames))
for (i in 1:nrow(data)){
j=which(allnames==data[i,2])
k=which(allnames==data[i,3])
X[j,k]=X[j,k]+1
}
X=X/max(X)
diag(X)=1
library(igraph)
# function for risk increment and decomp
NetRisk=function(Ri, X){
S=sqrt(t(Ri) %*% X %*% Ri)
RiskIncr=0.5*(X %*% Ri + t(X) %*% Ri)/S[1,1]
RiskDecomp=RiskIncr*Ri
result=list(S,RiskIncr,RiskDecomp)
}
# graph network
na = length(diag(X))
Y=X
diag(Y)=0
g=graph.adjacency(Y)
plot.igraph(g, layout=layout.fruchterman.reingold,
edge.arrow.size=0.5, vertex.size=15,
vertex.label=seq(1,na))
# compute overall risk score and risk increment
res = NetRisk(Ri, X)
S = res[[1]]
print(c("Risk_Score",S))
RiskIncr=res[[2]]
# network fragility
deg = rowSums(X)-1
frag = mean(deg^2)/mean(deg)
print(c("Fragility_Score = ",frag))
# node eigen value centrality
cent = evcent(g)$vector
print("Normalized Centrality Scores")
print(cent)
sorted_cent=sort(cent, decreasing=TRUE, index.return=TRUE)
Scent=sorted_cent$x
idxScent=sorted_cent$ix
barplot(t(Scent),col="dark red",xlab="Node Number",names.arg=idxScent, cex.names=0.75)
print(cent)
# compute diameter
print (diameter(g))
RiskDecomp = RiskIncr * Ri
sorted_RiskDecomp = sort(RiskDecomp, decreasing=TRUE, index.return=TRUE)
RD = sorted_RiskDecomp$x
idxRD = sorted_RiskDecomp$ix
print("Risk Contribution")
print(RiskDecomp)
print(sum(RiskDecomp))
barplot(t(RD),col="dark_green",xlab="Node_Number",
names.arg=idxRD, cex.names=0.75)
print(RiskDecomp)
print(sum(RiskDecomp))
barplot(t(RD),col="dark green",xlab="Node Number",
names.arg=idxRD, cex.names=0.75)
Sbar = S/sqrt(t(Ri) %*% Ri)
print("Sbar (normalized risk score")
print(Sbar)
RiskIncr
RiskIncr[1]
sorted_RiskIncr = sort(RiskIncr, decreasing=TRUE, index.return=TRUE)
RI = sorted_RiskIncr$x
idxRI = sorted_RiskIncr$ix
print("Risk Increment (per unit increase in any node risk")
print(RiskIncr)
barplot(t(RI), col="dark blue", xlab="Node_Number",
names.arg=idxRI, cex.names=0.75)
crit = Ri * cent
print("Criticality Vector")
print(crit)
sorted_crit=sort(crit,decreasing=TRUE,index.return=TRUE)
Scrit=sorted_crit$x
idxScrit=sorted_crit$ix
barplot(t(Scrit),col="orange",xlab="Node Number",
names.arg=idxScrit, cex.names=0.75)
print(crit)
barplot(t(Scent),col="dark red",xlab="Node Number",names.arg=idxScent, cex.names=0.75)
names.arg=idxScrit, cex.names=0.75)
idxScrit=sorted_crit$ix
names.arg=idxScrit, cex.names=0.75)
crit = Ri * cent
print("Criticality Vector")
print(crit)
sorted_crit=sort(crit,decreasing=TRUE,index.return=TRUE)
Scrit=sorted_crit$x
idxScrit=sorted_crit$ix
barplot(t(Scrit),col="orange",xlab="Node Number",
names.arg=idxScrit, cex.names=0.75)
print(crit)
names.arg=idxRD, cex.names=0.75)
RiskDecomp = RiskIncr * Ri
sorted_RiskDecomp = sort(RiskDecomp, decreasing=TRUE, index.return=TRUE)
RD = sorted_RiskDecomp$x
idxRD = sorted_RiskDecomp$ix
print("Risk Contribution")
print(RiskDecomp)
print(sum(RiskDecomp))
barplot(t(RD),col="dark green",xlab="Node Number",
names.arg=idxRD, cex.names=0.75)
print(RiskDecomp)
print(sum(RiskDecomp))
g=graph.adjacency(Y)
plot.igraph(g, layout=layout.fruchterman.reingold,
edge.arrow.size=0.5, vertex.size=15,
vertex.label=seq(1,na))
View(X)
View(X)
sorted_RiskIncr = sort(RiskIncr, decreasing=TRUE, index.return=TRUE)
RI = sorted_RiskIncr$x
idxRI = sorted_RiskIncr$ix
print("Risk Increment (per unit increase in any node risk")
print(RiskIncr)
barplot(t(RI), col="dark blue", xlab="Node_Number",
names.arg=idxRI, cex.names=0.75)
data=read.csv(file="/Volumes/Jane/Research Seminar II/4/heroesData.csv", header=TRUE, sep =",")
# create compromise vector
Ri=table(c(as.matrix(data[,2]),as.matrix(data[,3])))
Ri=as.matrix(Ri)
allnames=rownames(Ri)
X=matrix(0,nrow=length(allnames),ncol=length(allnames))
for (i in 1:nrow(data)){
j=which(allnames==data[i,2])
k=which(allnames==data[i,3])
X[j,k]=X[j,k]+1
}
X=X/max(X)
diag(X)=1
library(igraph)
# function for risk increment and decomp
NetRisk=function(Ri, X){
S=sqrt(t(Ri) %*% X %*% Ri)
RiskIncr=0.5*(X %*% Ri + t(X) %*% Ri)/S[1,1]
RiskDecomp=RiskIncr*Ri
result=list(S,RiskIncr,RiskDecomp)
}
# Exhibition1 graph network
na = length(diag(X))
Y=X
diag(Y)=0
g=graph.adjacency(Y)
plot.igraph(g, layout=layout.fruchterman.reingold,
edge.arrow.size=0.5, vertex.size=15,
vertex.label=seq(1,na))
res = NetRisk(Ri, X)
S = res[[1]]
print(c("Risk_Score",S))
RiskIncr=res[[2]]
res = NetRisk(Ri, X)
S = res[[1]]
print(c("Risk_Score",S))
RiskIncr=res[[2]]
# network fragility
deg = rowSums(X)-1
frag = mean(deg^2)/mean(deg)
print(c("Fragility_Score = ",frag))
# Exhibition2 node eigen value centrality
cent = evcent(g)$vector
print("Normalized Centrality Scores")
print(cent)
sorted_cent=sort(cent, decreasing=TRUE, index.return=TRUE)
Scent=sorted_cent$x
idxScent=sorted_cent$ix
barplot(t(Scent),col="dark red",xlab="Node Number",names.arg=idxScent, cex.names=0.75)
print(cent)
# compute diameter
print (diameter(g))
# Exhibition4 compute risk decomposition
RiskDecomp = RiskIncr * Ri
sorted_RiskDecomp = sort(RiskDecomp, decreasing=TRUE, index.return=TRUE)
RD = sorted_RiskDecomp$x
idxRD = sorted_RiskDecomp$ix
print("Risk Contribution")
print(RiskDecomp)
print(sum(RiskDecomp))
barplot(t(RD),col="dark green",xlab="Node Number",
names.arg=idxRD, cex.names=0.75)
print(RiskDecomp)
print(sum(RiskDecomp))
# compute normalized score SBar
Sbar = S/sqrt(t(Ri) %*% Ri)
print("Sbar (normalized risk score")
print(Sbar)
# Exhibition5 plot risk increments
sorted_RiskIncr = sort(RiskIncr, decreasing=TRUE, index.return=TRUE)
RI = sorted_RiskIncr$x
idxRI = sorted_RiskIncr$ix
print("Risk Increment (per unit increase in any node risk")
print(RiskIncr)
barplot(t(RI), col="dark blue", xlab="Node_Number",
names.arg=idxRI, cex.names=0.75)
# Exhibition3 criticality
crit = Ri * cent
print("Criticality Vector")
print(crit)
sorted_crit=sort(crit,decreasing=TRUE,index.return=TRUE)
Scrit=sorted_crit$x
idxScrit=sorted_crit$ix
barplot(t(Scrit),col="orange",xlab="Node Number",
names.arg=idxScrit, cex.names=0.75)
print(crit)
trainingdata=read.csv(file="/Volumes/Jane/Advanced Data Mining/Write Up/Research/train.csv", header=TRUE, sep =",")
trainingdata=read.csv(file="/Volumes/Jane/Advanced Data Mining/Write Up/Research/train.csv", header=TRUE, sep =",")
View(trainingdata)
summary(trainingdata)
require(gRbase)
d<-dag(~smoke+bronc|smoke+dysp|bronc)
plot(d)
d<-dag( ~smoke + bronc | smoke + dysp | bronc )
plot(d)
require(Rgraphviz)
plot(d)
library(gRain)
yn <- c("yes", "no")
s   <- parray("smoke", list(yn), c(0.5, 0,5))
b.s <- parray(c("bronc", "smoke"), list(yn, yn), c(6,4,3,7))
b.s <- parray(c("bronc", "smoke"), list(yn, yn), c(6,4,3,7))
d.b <- parray(c("dysp", "bronc"), list(yn, yn), c(9,1,2,8))
s
s   <- parray("smoke", list(yn), c(0.5, 0.5))
s
b.s <- parray(c("bronc", "smoke"), list(yn, yn), c(6,4,3,7))
b.s
d.b
joint <- tableMult(tableMult(s, b.s), d.b)
ftable(joint)
dm <- moralize(d)
jtree <- ug( ~smoke.bronc : bronc.dysp)
par(mfrow = c(1,3); plot(d); plot(dm); plot(jtree))
par(mfrow = c(1,3)); plot(d); plot(dm); plot(jtree))
plot(d); plot(dm); plot(jtree))
plot(d)
plot(dm)
plot(jtree)
par(mfrow = c(1,3))
plot(d)
plot(dm)
plot(jtree)
q1.sb <- tableMult(s, b.s)
q1.sb
sb
b.s
q2.bd <- d.b
q2.bd
plot(jtree)
plot(jtree)
plot(jtree)
q1.b <- tableMargin(q1.sb, "bronc")
q1.b
q1.sb
q2.bd <- tableMult(q2.bd, q1.b)
q2.bd
q1.sb <- tableDiv(q1.sb, q1.b)
q1.sb
q2.b <- tableMargin(q2.bd, "bronc")
q2.b
q1.sb <- tableMult(q1.sb, q2.b)
q1.sb
joint
q1.sb
tableMargin(joint, c("smoke","bronc"))
q2.bd
tableMargin(joint, c("bronc", "dysp"))
tableMargin(q1.sb, "bronc")
tableMargin(q2.bd, "bronc")
install.packages('caret', dependencies = TRUE)
?findCorrelation
library('caret')
?findCorrelation
restaurant <- c('Ali Baba','Applebee’s','Bamboo House','Banh Mi Boy','Buffalo Wild Wings','Burger King','Caffe Gelato','California Tortilla','Catherine Rooney’s Irish Pub','Cheeburger Cheeburger','CHEF TAN','Chipotle Mexican Grill','Churrascaria Saudades','Claymont Steak Shop','Colorful Yun Nan','Cosi','Dairy Queen','Deer Park Tavern','Del Pez Mexican Gastropub','Domino’s Pizza','El Diablo Burritos','Grain Craft Bar + Kitchen','Grotto Pizza','Home Grown Cafe','honeygrow','Iron Hill Brewery & Restaurant','Jimmy John’s','KFC','Klondike Kate’s','Little Teriyaki','Margherita’s Pizza','Mayflower Japanese Restaurant', 'McDonald’s', 'Mediterranean Grille','Newark Deli & Bagels','Outback Steakhouse','Panera Bread','Papa John’s Pizza','Pat’s Pizzaria', 'Peace A Pizza', 'Popeyes', 'Ramen Kumamoto', 'Seasons Pizza','Sinclairs Cafe','Stone Balloon Ale House','Subway','Taverna,'The Greene Turtle,'The Red Bowl,'Vita Nova')
restaurant <- c('Ali Baba','Applebee’s','Bamboo House','Banh Mi Boy','Buffalo Wild Wings','Burger King','Caffe Gelato','California Tortilla','Catherine Rooney’s Irish Pub','Cheeburger Cheeburger','CHEF TAN','Chipotle Mexican Grill','Churrascaria Saudades','Claymont Steak Shop','Colorful Yun Nan','Cosi','Dairy Queen','Deer Park Tavern','Del Pez Mexican Gastropub','Domino’s Pizza','El Diablo Burritos','Grain Craft Bar + Kitchen','Grotto Pizza','Home Grown Cafe','honeygrow','Iron Hill Brewery & Restaurant','Jimmy John’s','KFC','Klondike Kate’s','Little Teriyaki','Margherita’s Pizza','Mayflower Japanese Restaurant', 'McDonald’s', 'Mediterranean Grille','Newark Deli & Bagels','Outback Steakhouse','Panera Bread','Papa John’s Pizza','Pat’s Pizzaria', 'Peace A Pizza', 'Popeyes', 'Ramen Kumamoto', 'Seasons Pizza','Sinclairs Cafe','Stone Balloon Ale House','Subway','Taverna','The Greene Turtle,'The Red Bowl,'Vita Nova')
restaurant <- c('Ali Baba','Applebees','Bamboo House','Banh Mi Boy','Buffalo Wild Wings','Burger King','Caffe Gelato','California Tortilla','Catherine Rooneys Irish Pub','Cheeburger Cheeburger','CHEF TAN','Chipotle Mexican Grill','Churrascaria Saudades','Claymont Steak Shop','Colorful Yun Nan','Cosi','Dairy Queen','Deer Park Tavern','Del Pez Mexican Gastropub','Dominos Pizza','El Diablo Burritos','Grain Craft Bar + Kitchen','Grotto Pizza','Home Grown Cafe','honeygrow','Iron Hill Brewery & Restaurant','Jimmy Johns','KFC','Klondike Kates','Little Teriyaki','Margheritas Pizza','Mayflower Japanese Restaurant', 'McDonalds', 'Mediterranean Grille','Newark Deli & Bagels','Outback Steakhouse','Panera Bread','Papa Johns Pizza','Pats Pizzaria', 'Peace A Pizza', 'Popeyes', 'Ramen Kumamoto', 'Seasons Pizza','Sinclairs Cafe','Stone Balloon Ale House','Subway','Taverna','The Greene Turtle,'The Red Bowl,'Vita Nova')
restaurant <- c('Ali Baba','Applebees','Bamboo House','Banh Mi Boy','Buffalo Wild Wings','Burger King','Caffe Gelato','California Tortilla','Catherine Rooneys Irish Pub','Cheeburger Cheeburger','CHEF TAN','Chipotle Mexican Grill','Churrascaria Saudades','Claymont Steak Shop','Colorful Yun Nan','Cosi','Dairy Queen','Deer Park Tavern','Del Pez Mexican Gastropub','Dominos Pizza','El Diablo Burritos','Grain Craft Bar Kitchen','Grotto Pizza','Home Grown Cafe','honeygrow','Iron Hill Brewery & Restaurant','Jimmy Johns','KFC','Klondike Kates','Little Teriyaki','Margheritas Pizza','Mayflower Japanese Restaurant', 'McDonalds', 'Mediterranean Grille','Newark Deli & Bagels','Outback Steakhouse','Panera Bread','Papa Johns Pizza','Pats Pizzaria', 'Peace A Pizza', 'Popeyes', 'Ramen Kumamoto', 'Seasons Pizza','Sinclairs Cafe','Stone Balloon Ale House','Subway','Taverna','The Greene Turtle,'The Red Bowl','Vita Nova')
restaurant <- c('Ali Baba','Applebees','Bamboo House','Banh Mi Boy','Buffalo Wild Wings','Burger King','Caffe Gelato','California Tortilla','Catherine Rooneys Irish Pub','Cheeburger Cheeburger','CHEF TAN','Chipotle Mexican Grill','Churrascaria Saudades','Claymont Steak Shop','Colorful Yun Nan','Cosi','Dairy Queen','Deer Park Tavern','Del Pez Mexican Gastropub','Dominos Pizza','El Diablo Burritos','Grain Craft Bar Kitchen','Grotto Pizza','Home Grown Cafe','honeygrow','Iron Hill Brewery & Restaurant','Jimmy Johns','KFC','Klondike Kates','Little Teriyaki','Margheritas Pizza','Mayflower Japanese Restaurant', 'McDonalds', 'Mediterranean Grille','Newark Deli Bagels','Outback Steakhouse','Panera Bread','Papa Johns Pizza','Pats Pizzaria', 'Peace A Pizza', 'Popeyes', 'Ramen Kumamoto', 'Seasons Pizza','Sinclairs Cafe','Stone Balloon Ale House','Subway','Taverna','The Greene Turtle,'The Red Bowl','Vita Nova')
restaurant <- c('Ali Baba','Applebees','Bamboo House','Banh Mi Boy','Buffalo Wild Wings','Burger King','Caffe Gelato','California Tortilla','Catherine Rooneys Irish Pub','Cheeburger Cheeburger','CHEF TAN','Chipotle Mexican Grill','Churrascaria Saudades','Claymont Steak Shop','Colorful Yun Nan','Cosi','Dairy Queen','Deer Park Tavern','Del Pez Mexican Gastropub','Dominos Pizza','El Diablo Burritos','Grain Craft Bar Kitchen','Grotto Pizza','Home Grown Cafe','honeygrow','Iron Hill Brewery & Restaurant','Jimmy Johns','KFC','Klondike Kates','Little Teriyaki','Margheritas Pizza','Mayflower Japanese Restaurant', 'McDonalds', 'MediterraneanGrille','Newark Deli Bagels','Outback Steakhouse','Panera Bread','Papa Johns Pizza','Pats Pizzaria', 'Peace A Pizza', 'Popeyes', 'Ramen Kumamoto', 'Seasons Pizza','Sinclairs Cafe','Stone Balloon Ale House','Subway','Taverna','The Greene Turtle,'The Red Bowl','Vita Nova')
restaurant <- c('Ali Baba','Applebees','Bamboo House','Banh Mi Boy','Buffalo Wild Wings','Burger King','Caffe Gelato','California Tortilla','Catherine Rooneys Irish Pub','Cheeburger Cheeburger','CHEF TAN','Chipotle Mexican Grill','Churrascaria Saudades','Claymont Steak Shop','Colorful Yun Nan','Cosi','Dairy Queen','Deer Park Tavern','Del Pez Mexican Gastropub','Dominos Pizza','El Diablo Burritos','Grain Craft Bar Kitchen','Grotto Pizza','Home Grown Cafe','honeygrow','Iron Hill Brewery & Restaurant','Jimmy Johns','KFC','Klondike Kates','Little Teriyaki','Margheritas Pizza','Mayflower Japanese Restaurant', 'McDonalds','Mediterranean Grille','Newark Deli Bagels','Outback Steakhouse','Panera Bread','Papa Johns Pizza','Pats Pizzaria', 'Peace A Pizza', 'Popeyes', 'Ramen Kumamoto', 'Seasons Pizza','Sinclairs Cafe','Stone Balloon Ale House','Subway','Taverna','The Greene Turtle,'The Red Bowl','Vita Nova')
restaurant <- c('Ali Baba','Applebees','Bamboo House','Banh Mi Boy','Buffalo Wild Wings','Burger King','Caffe Gelato','California Tortilla','Catherine Rooneys Irish Pub','Cheeburger Cheeburger','CHEF TAN','Chipotle Mexican Grill','Churrascaria Saudades','Claymont Steak Shop','Colorful Yun Nan','Cosi','Dairy Queen','Deer Park Tavern','Del Pez Mexican Gastropub','Dominos Pizza','El Diablo Burritos','Grain Craft Bar Kitchen','Grotto Pizza','Home Grown Cafe','honeygrow','Iron Hill Brewery & Restaurant','Jimmy Johns','KFC','Klondike Kates','Little Teriyaki','Margheritas Pizza','Mayflower Japanese Restaurant', 'McDonalds','Mediterranean Grille','Newark Deli Bagels','Outback Steakhouse','Panera Bread','Papa Johns Pizza','Pats Pizzaria', 'Peace A Pizza', 'Popeyes', 'Ramen Kumamoto', 'Seasons Pizza','Sinclairs Cafe','Stone Balloon Ale House','Subway','Taverna','The Greene Turtle,'The Red Bowl','Vita Nova')
restaurant <- c('Ali Baba','Applebees','Bamboo House','Banh Mi Boy','Buffalo Wild Wings','Burger King','Caffe Gelato','California Tortilla','Catherine Rooneys Irish Pub','Cheeburger Cheeburger','CHEF TAN','Chipotle Mexican Grill','Churrascaria Saudades','Claymont Steak Shop','Colorful Yun Nan','Cosi','Dairy Queen','Deer Park Tavern','Del Pez Mexican Gastropub','Dominos Pizza','El Diablo Burritos','Grain Craft Bar Kitchen','Grotto Pizza','Home Grown Cafe','honeygrow','Iron Hill Brewery & Restaurant','Jimmy Johns','KFC','Klondike Kates','Little Teriyaki','Margheritas Pizza','Mayflower Japanese Restaurant','McDonalds','Mediter Grille','Newark Deli Bagels','Outback Steakhouse','Panera Bread','Papa Johns Pizza','Pats Pizzaria', 'Peace A Pizza', 'Popeyes', 'Ramen Kumamoto', 'Seasons Pizza','Sinclairs Cafe','Stone Balloon Ale House','Subway','Taverna','The Greene Turtle,'The Red Bowl','Vita Nova')
restaurant <- c('Ali Baba','Applebees','Bamboo House','Banh Mi Boy','Buffalo Wild Wings','Burger King','Caffe Gelato','California Tortilla','Catherine Rooneys Irish Pub','Cheeburger Cheeburger','CHEF TAN','Chipotle Mexican Grill','Churrascaria Saudades','Claymont Steak Shop','Colorful Yun Nan','Cosi','Dairy Queen','Deer Park Tavern','Del Pez Mexican Gastropub','Dominos Pizza','El Diablo Burritos','Grain Craft Bar Kitchen','Grotto Pizza','Home Grown Cafe','honeygrow','Iron Hill Brewery & Restaurant','Jimmy Johns','KFC','Klondike Kates','Little Teriyaki','Margheritas Pizza','Mayflower Japanese Restaurant', 'McDonalds','Mediterranean Grille','Newark Deli Bagels','Outback Steakhouse','Panera Bread','Papa Johns Pizza','Pats Pizzaria','Peace A Pizza','Popeyes','Ramen Kumamoto', 'Seasons Pizza','Sinclairs Cafe','Stone Balloon Ale House','Subway','Taverna','The Greene Turtle','The Red Bowl','Vita Nova')
?random
sample(restaurant,5)
sample(restaurant,5)
sample(restaurant,5)
sample(restaurant,5)
sample(restaurant,5)
sample(restaurant,5)
sample(restaurant,5)
sample(restaurant,5)
sample(restaurant,5)
sample(restaurant,5)
sample(restaurant,5)
sample(restaurant,5)
sample(restaurant,5)
sample(restaurant,5)
sample(restaurant,5)
sample(restaurant,5)
sample(restaurant,5)
sample(restaurant,5)
sample(restaurant,5)
sample(restaurant,5)
sample(restaurant,5)
sample(restaurant,5)
sample(restaurant,5)
sample(restaurant,5)
sample(restaurant,5)
sample(restaurant,5)
sample(restaurant,5)
curve3d(invChiDissim, from = c(0,0), to = c(1,1), n = c(41,41), sys3d = 'contour', varnames = c('d2', 'd3'))
source('/Volumes/Jane/FSAN/Summer Paper/Sabre/present/Chi3D.R', echo=TRUE)
curve3d(avgDissim, from = c(0,0), to = c(1,1), n = c(41,41), sys3d = 'contour', varnames = c('d2', 'd3'))
source('/Volumes/Jane/FSAN/Summer Paper/Sabre/present/Chi3D.R', echo=TRUE)
curve3d(avgDissim, from = c(0,0), to = c(1,1), n = c(41,41), sys3d = 'contour', varnames = c('d2', 'd3'), main = 'Average Dissimilarity Score')
source('/Volumes/Jane/FSAN/Summer Paper/Sabre/present/Chi3D.R', echo=TRUE)
source('/Volumes/Jane/FSAN/Summer Paper/Sabre/present/Chi3D.R', echo=TRUE)
source('/Volumes/Jane/FSAN/Summer Paper/Sabre/present/Chi3D.R', echo=TRUE)
source('/Volumes/Jane/FSAN/Summer Paper/Sabre/present/Chi3D.R', echo=TRUE)
# install.packages('emdbook')
library('emdbook')
# d1 = 0.5
avgDissimo = function(d2, d3){
z = mean(c( d2, d3))
return(z)
}
avgDissim = Vectorize(avgDissimo)
curve3d(avgDissim, from = c(0,0), to = c(1,1), n = c(41,41), sys3d = 'contour', varnames = c('d2', 'd3'), main = 'Average Dissimilarity')
chiDissim = function(d2, d3){
z = ( log(d2) + log(d3))*-2
return(z)
}
invChiDissim = function(d2, d3){
z = exp(-chiDissim(d2, d3)/2) * (1 + chiDissim(d2, d3)/2 + (chiDissim(d2, d3)/2)^2/2)
return(z)
}
curve3d(invChiDissim, from = c(0,0), to = c(1,1), n = c(41,41), sys3d = 'contour', varnames = c('d2', 'd3'), main = 'Chi Square Transformed Dissimilarity')
source('/Volumes/Jane/FSAN/Summer Paper/Sabre/present/Chi3D_2.R', echo=TRUE)
source('/Volumes/Jane/FSAN/Summer Paper/Sabre/present/Chi3D_2.R', echo=TRUE)
source('/Volumes/Jane/FSAN/Summer Paper/Sabre/present/Chi3D_2.R', echo=TRUE)
0.254703+0.037627*5
0.254703+0.037627*6
0.254703+0.037627*7
1/exp(-3)
1/exp(-7)
1/(exp(-7)+1)
1/(exp(7)+1)
1/(exp(-57)+1)
1/(exp(-17)+1)
1/(exp(-27)+1)
1/(exp(-37)+1)
1/(exp(-47)+1)
1/(exp(-57)+1)
x <- seq(from = 0, to = 1, by = 0.05)
log_base2 <- log(x, base = 2)
save(cbind(x, log_base2))
write.csv(cbind(x, log_base2), 'log2.csv')
getwd()
?binom.test()
binom.test(x = 22, n =25)
binom.test(x = 22, n =25, alternative = 'greater')
binom.test(x = 22, n =25, alternative = 'less')
install.packages('autoencoder')
library(autoencoder)
x <- matrix(0, 4, 4)
diag(x) <- 1
View(x)
autoencode(x, x, nl = 1, N.hidden = 2)
autoencode(X.train = x, X.test = x, nl = 1, N.hidden = 2)
gc()
gc()
gc()
gc()
ls()
?gc()
gc()
x = 5.56
trunc(x, digit = 1)
trunc(x, digit = 2)
trunc(x, digit = 3)
signif(x, digit = 1)
floor(x * 10, digit = 0)/10
floor(x * 10)/10
?binom.test
binom.test(24, 25)
binom.test(22, 25)
library(knitr)
install.packages('tools')
install.packages("tools")
install.packages("tools")
install.packages("tools")
?Rd2latex()
getwd()
setwd("~/Dropbox/thirdPaper/gpviz/man")
Rd2latex(Rd = gpslope.Rd, out = "test.tex", package = "gpviz")
Rd2latex(Rd = gpslope.Rd, out = "test.tex")
library(tools)
Rd2latex(Rd = gpslope.Rd, out = "test.tex")
Rd2latex(Rd = "gpslope.Rd", out = "test.tex")
